name: DAST Scan

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  zap_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Build app Docker image
      - name: Build Docker image
        run: docker build -t devsecops-app .

      # Create custom network
      - name: Create Docker network
        run: docker network create zapnet || true

      # Run Flask app in the network
      - name: Run app container
        run: docker run -d --network zapnet --name web devsecops-app

      # Wait until app is healthy
      - name: Wait for service
        run: |
          echo "Waiting for app at http://web:5000 ..."
          for i in {1..15}; do
            if docker run --rm --network zapnet curlimages/curl:latest -sSf http://web:5000/ >/dev/null 2>&1; then
              echo "App is ready!"
              exit 0
            fi
            echo "Try $i: not up yet..."
            sleep 5
          done
          echo "App did not start in time"
          docker logs web || true
          exit 1

      # Run OWASP ZAP full scan
      - name: Run OWASP ZAP Full Scan
        run: |
          docker run --rm --network zapnet \
            -u root \
            -v ${{ github.workspace }}:/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-full-scan.py \
              -t http://web:5000/user?username=test \
              -r /zap/wrk/zap_report.html \
              -m 2 || true

      # Verify report file
      - name: Verify ZAP Report
        run: ls -l zap_report.html

      # Upload report
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap_report.html

      # Cleanup
      - name: Tear down
        if: always()
        run: |
          docker rm -f web || true
          docker network rm zapnet || true
